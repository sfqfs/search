name: 测试

on:
  push:
    branches:
      - master
  # Sequence of patterns matched against refs/tags


jobs:
  build:
    permissions:
      contents: write
    name: Build And Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Code
        uses: actions/checkout@v2

      - name: Set Up Golang Environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        run: |
          echo "Building linux amd64 binary..."
          cd cmd/algoliaupload
          GOOS=linux GOARCH=amd64 go build main.go

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "cmd/algoliaupload/main"
          asset_name: "main"